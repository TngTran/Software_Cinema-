create database DB_RAPCHIEUPHIM
go
use DB_RAPCHIEUPHIM
go

CREATE TABLE KHACHHANG 
(
	MAKH NVARCHAR(10) NOT NULL,
	TENKH NVARCHAR(50),
	NGAYSINH DATE,
	GIOITINH NVARCHAR(4),
	CMND NCHAR(15),
	DIENTHOAI NCHAR(15),
	DIACHI NVARCHAR(30),
	SOLANXEM INT,
	CONSTRAINT PK_KH PRIMARY KEY(MAKH)
)
GO

CREATE TABLE QUYEN
(
	MAQUYEN NVARCHAR(10) NOT NULL,
	TENQUYEN NVARCHAR(50),
	PRIMARY KEY(MAQUYEN)
)
GO
CREATE TABLE TAIKHOAN
(
	TENDN NVARCHAR(10) NOT NULL,
	MATKHAU NVARCHAR(50) NOT NULL,
	MAQUYEN NVARCHAR(10),
	PRIMARY KEY(TENDN,MATKHAU),
	CONSTRAINT FK_TK_QUYEN FOREIGN KEY(MAQUYEN) REFERENCES QUYEN(MAQUYEN)
)
GO
CREATE TABLE NHANVIEN 
(
	MANV NVARCHAR(10) NOT NULL,
	HOTEN NVARCHAR(50),
	GIOITINH NCHAR(5),
	DIENTHOAI NCHAR(15),
	NGAYSINH DATE,
	DIACHI NVARCHAR(30),
	CONSTRAINT PK_NV PRIMARY KEY(MANV)
)
GO
CREATE TABLE PHIM
(
   MAPHIM NVARCHAR(10) NOT NULL,
   TENPHIM NVARCHAR(40),
   DAODIEN NVARCHAR(40),
   NOIDUNG NVARCHAR(200),
   THELOAI NVARCHAR(20),
   NUOCSX NVARCHAR(20),
   NAMSX INT,
   THOILUONG INT,
   CONSTRAINT PK_PHIM PRIMARY KEY (MAPHIM)
)
GO
CREATE TABLE CACHIEU
(
   MACACHIEU NVARCHAR(10) NOT NULL,
   GIOBD TIME,
   GIOKT TIME,
   CUOITUAN BIT,
   PHUTHUCACHIEU DECIMAL(10,2),
   CONSTRAINT PK_CACHIEU PRIMARY KEY (MACACHIEU)
)
GO
CREATE TABLE VE
(
  MAVE NVARCHAR(10) NOT NULL,
  MAPHIM NVARCHAR(10) NOT NULL,
  MAKH NVARCHAR(10) NOT NULL, 
  MACACHIEU NVARCHAR(10) ,
  SOGHE NVARCHAR(10),
  GIA INT,
  MANV NVARCHAR(10),
  NGAYCHIEU DATE,
  CONSTRAINT PK_VE PRIMARY KEY (MAVE), 
  CONSTRAINT FK_VE_KHACHHANG FOREIGN KEY (MAKH) REFERENCES KHACHHANG(MAKH),
  CONSTRAINT FK_VE_NHANVIEN FOREIGN KEY (MANV) REFERENCES NHANVIEN(MANV),
  CONSTRAINT FK_VE_CACHIEU FOREIGN KEY (MACACHIEU) REFERENCES CACHIEU(MACACHIEU),
  CONSTRAINT FK_VE_PHIM FOREIGN KEY (MAPHIM) REFERENCES PHIM(MAPHIM)
)
GO
--RÀNG BUỘC BẢNG KHÁCH HÀNG
ALTER TABLE KHACHHANG
ADD CONSTRAINT CHECK_GIOITINH CHECK(GIOITINH = N'Nam' OR GIOITINH = N'Nữ')
ALTER TABLE KHACHHANG
ADD CONSTRAINT UNI_DIENTHOAI UNIQUE(DIENTHOAI)
ALTER TABLE KHACHHANG
ADD CONSTRAINT UNI_CMND UNIQUE(CMND)
ALTER TABLE KHACHHANG
ADD CONSTRAINT DEF_SOLANXEM DEFAULT '0' FOR SOLANXEM
ALTER TABLE KHACHHANG
ADD CONSTRAINT DEF_DIACHI DEFAULT N'Chưa xác định' FOR DIACHI
ALTER TABLE KHACHHANG
ADD CONSTRAINT DEF_GIOITINH DEFAULT N'Nam' FOR GIOITINH
--RÀNG BUỘC BẢNG NHÂN VIÊN
ALTER TABLE NHANVIEN
ADD CONSTRAINT CHECK_GIOITINHNV CHECK(GIOITINH = N'Nam' OR GIOITINH = N'Nữ')
ALTER TABLE NHANVIEN
ADD CONSTRAINT DEF_GT_NV DEFAULT N'Nam' FOR GIOITINH
ALTER TABLE NHANVIEN
ADD CONSTRAINT UNI_DIENTHOAINV UNIQUE(DIENTHOAI)
--ALTER TABLE NHANVIEN
--ADD CONSTRAINT UNI_DIACHINV UNIQUE(DIACHI)
--ALTER TABLE NHANVIEN
--DROP CONSTRAINT UNI_DIACHINV
--RÀNG BUỘC BẢNG VÉ
ALTER TABLE VE
ADD CONSTRAINT DEF_GIAVE DEFAULT '45000' FOR GIA


--NHẬP DỮ LIỆU
SET DATEFORMAT DMY
INSERT INTO KHACHHANG
VALUES('KH001',N'Lê Võ Tuyết Vy','14/07/1985',N'Nam','3001190475','0334906111',N'TP.HCM',2)
INSERT INTO KHACHHANG
VALUES('KH002',N'Tường Vy','05/07/1994',N'Nữ','3001190476','0123456789',N'TP.HCM',1)
INSERT INTO KHACHHANG
VALUES('KH003',N'Nguyễn Ngọc Diệp','22/07/2001',N'Nữ','3001190477','0938381234',N'Long An',5)
INSERT INTO KHACHHANG
VALUES('KH004',N'Lý Mỹ Cấm','26/10/1999',N'Nữ','3001190478','0968249456',N'Tiền Giang',4)
INSERT INTO KHACHHANG
VALUES('KH005',N'Nguyễn Văn Nam','16/05/1985',N'Nam','3001190479','0395703789',N'Hàn Quốc',2)
INSERT INTO KHACHHANG
VALUES('KH006',N'Lê Thị Hạnh','15/08/1981',N'Nữ','3001190480','0334236123',N'Nhật Bản',1)
INSERT INTO KHACHHANG
VALUES('KH007',N'Trần Văn Sáng','14/08/1972',N'Nam','3001190481','0989073240',N'Huế',1)
INSERT INTO KHACHHANG
VALUES('KH008',N'Nguyễn Thành Lê','01/01/1989',N'Nam','3001190482','0938385471',N'Đồng Tháp',3)
INSERT INTO KHACHHANG
VALUES('KH009',N'Lê Thị Thảo','05/12/2000',N'Nam','3001190483','0373456781',N'Thanh Hóa',2)
INSERT INTO KHACHHANG
VALUES('KH010',N'Nguyễn Tú Trinh','12/03/2001',N'Nam','3001190484','0932778821',N'Huế',4)
-- SELECT * FROM KHACHHANG

SET DATEFORMAT DMY
INSERT INTO NHANVIEN
VALUES('NV001',N'Lê Quốc Nhiên',N'Nam','0395703397','25/04/2000',N'Hàn Quốc')
INSERT INTO NHANVIEN
VALUES('NV002',N'Địch Lệ Nhiệt Ba',N'Nữ','0334906789','18/05/2001',N'Long An')
INSERT INTO NHANVIEN
VALUES('NV003',N'Hà Xuân Đông',N'Nam','0394703397','05/07/2000',N'TP.HCM')
INSERT INTO NHANVIEN
VALUES('NV004',N'Triệu Lộ Tư',N'Nữ','0989073500','12/12/2000',N'Bình Định')
INSERT INTO NHANVIEN
VALUES('NV005',N'Kim Han Bin',N'Nam','093838546','22/10/1999',N'Sapa')
INSERT INTO NHANVIEN
VALUES('NV006',N'Triệu Lệ Dĩnh',N'Nữ','0395339755','15/04/1998',N'Đà Lạt')
INSERT INTO NHANVIEN
VALUES('NV007',N'Lâm Nhất',N'Nam','0345767123','05/12/2000',N'Long An')
INSERT INTO NHANVIEN
VALUES('NV008',N'Ngô Lỗi',N'Nam','0989073112','25/05/2001',N'Bạc Liêu')
INSERT INTO NHANVIEN
VALUES('NV009',N'Dương Mịch',N'Nam','0386667878','23/07/2001',N'Cà Mau')
INSERT INTO NHANVIEN
VALUES('NV010','Nguyễn Thanh Tùng',N'Nam','0395703399','26/10/2000',N'Đà Nẵng')
-- SELECT * FROM NHANVIEN
INSERT INTO PHIM
VALUES
('PHIM001',N'Godzilla đại chiến Kong',N'Adam Wingard',N'Đây là phần tiếp theo của Chúa tể Godzilla và Kong',N'Khoa học viễn tưởng',N'Mỹ',2021,120), 
('PHIM002',N'Bố già',N'Trấn Thành',N'Dựa trên bộ phim chiếu mạng cùng tên năm 2020 của Trấn Thành',N'Chính kịch gia đình',N'Việt Nam',2021,90), 
('PHIM003',N'Mortal Kombat: Cuộc chiến sinh tử',N'Simon McQuoid',N'Phát triển trên cốt truyện của Oren Uziel và Russo',N'Hành động',N'Mỹ',2021,180), 
('PHIM004',N'Ấn Quỷ',N'Evan Spiliotopoulos',N'Ấn quỷ là một phim kinh dị siêu nhiên của Mỹ do Evan Spiliotopoulos viết kịch bản',N'Kinh dị',N'Mỹ',2021,180), 
('PHIM005',N'Bàn tay hủy diệt',N'Kim Joo-Hwan',N'Là một bộ phim kinh dị hành động Hàn Quốc năm 2019',N'Kinh dị',N'Hàn Quốc',2019,120), 
('PHIM006',N'Song song',N'Nguyễn Hữu Hoàng',N'Song song là một phim điện ảnh của Việt Nam trong thể loại ly kỳ viễn tưởng và tâm lý',N'Thần bí',N'Việt Nam',2020,120), 
('PHIM007',N'Josee: Khi nàng thơ yêu',N'Inudo Isshin',N'Bộ phim dựa trên một truyện ngắn cùng tên của Seiko Tanabe',N'Lãng mạn',N'Nhật Bản',2003,90), 
('PHIM008',N'Harry Potter và Bảo bối Tử thần - Phần 2',N'David Yates',N'Đây là phần 2 của phần phim thứ bảy trong loạt phim Harry Potter',N'Kỳ ảo',N'Mỹ',2011,90), 
('PHIM009',N'Siêu trộm',N'Jaume Balagueró',N'The Vault là một bộ phim về vụ cướp nói tiếng Anh của Tây Ban Nha năm 2021',N'Hành động',N'Tây Ban Nha',2021,80), 
('PHIM010',N'Raya và rồng thần cuối cùng',N'Don Hall',N'Raya và rồng thần cuối cùng là phim hoạt hình phiêu lưu hành động kỳ ảo của Mỹ',N'Kỳ ảo',N'Mỹ',2021,90)
-- SELECT * FROM PHIM

INSERT INTO CACHIEU
VALUES
('CA001','10:00','12:30',1,1.2),
('CA002','08:00','13:30',0,1),
('CA003','04:00','12:30',0,1),
('CA004','06:00','8:00',1,1.2),
('CA005','05:00','07:00',0,1),
('CA006','16:00','18:30',1,1),
('CA007','17:00','19:00',1,1.2),
('CA008','10:00','12:30',1,1.2),
('CA009','13:00','15:15',0,1),
('CA010','10:00','12:30',0,1)
-- SELECT * FROM CACHIEU
GO
SET DATEFORMAT DMY
INSERT INTO VE 
VALUES('VE001','PHIM001', 'KH001','CA003',N'A7',100000,'NV001','20/5/2022')
INSERT INTO VE 
VALUES('VE002','PHIM002', 'KH001','CA001',N'F7',100000,'NV002','23/5/2022')
INSERT INTO VE 
VALUES('VE003','PHIM003', 'KH006','CA005',N'B5',100000,'NV003','26/6/2022')
INSERT INTO VE 
VALUES('VE004','PHIM004', 'KH007','CA008',N'D3',45000,'NV002','30/7/2022')
INSERT INTO VE 
VALUES('VE005','PHIM005', 'KH009','CA004',N'E5',70000,'NV004','1/6/2022')
INSERT INTO VE
VALUES('VE006','PHIM006', 'KH010','CA007',N'F9',70000,'NV005','2/5/2022')
INSERT INTO VE
VALUES('VE007','PHIM007', 'KH006','CA009',N'F10',70000,'NV006','5/5/2022')
INSERT INTO VE 
VALUES('VE008','PHIM008', 'KH005','CA010',N'A6',100000,'NV006','30/4/2022')
INSERT INTO VE 
VALUES('VE009','PHIM009', 'KH005','CA006',N'F4',45000,'NV007','20/5/2022')
INSERT INTO VE 
VALUES('VE010','PHIM010', 'KH001','CA002',N'A1',50000,'NV008','20/5/2022')
-- select*from VE


GO
INSERT INTO QUYEN
VALUES('Q001','ADMIN'),
('Q002','NHANVIEN')
-- SELECT * FROM  QUYEN
GO
INSERT INTO TAIKHOAN
VALUES('loc','123','Q002'),
('long','123','Q002'),
('duyle','123','Q002'),
('thanhduy','123','Q002'),
('tung','123','Q001')
GO
-- SELECT * FROM TAIKHOAN

-------------------------TRIGGER-----------------------------

--TRIGGER 1: KIỂM TRA GIỜ BẮT ĐẦU VỚI GIỜ KẾT THÚC
CREATE TRIGGER TRIG_CHECKTIME_CACHIEU ON CACHIEU
FOR INSERT, UPDATE
AS
	BEGIN
		DECLARE @GIOBD TIME, @GIOKT TIME
		SELECT @GIOBD = GIOBD FROM inserted
		SELECT @GIOKT = GIOKT FROM inserted
		IF(@GIOBD < @GIOKT)
			BEGIN
				COMMIT TRAN
				PRINT N'TRIG_CHECKTIME_CACHIEU THÀNH CÔNG.'
			END
		ELSE
			BEGIN 
				ROLLBACK TRAN
				PRINT N'Thời gian kết thúc phải lớn hơn thời gian bắt đầu.'
			END
	END

-- TEST DL
-- SELECT * FROM CACHIEU
INSERT INTO CACHIEU
VALUES('CA011', '10:00', '11:30', 0, 1)
INSERT INTO CACHIEU
VALUES('CA012', '12:00', '11:30', 0, 1)
GO
UPDATE CACHIEU
SET GIOKT = '12:00' WHERE MACACHIEU = 'CA011'
--TRIGGER KIEM GIA THOI GIAN CA CHIEU TOI DA 3 TIENG RUOI
CREATE TRIGGER TRIG_TIME_CACHIEU ON CACHIEU
FOR INSERT, UPDATE
AS
	BEGIN
		DECLARE @GIOBD TIME, @GIOKT TIME
		SELECT @GIOBD = GIOBD FROM inserted
		SELECT @GIOKT = GIOKT FROM inserted
		IF(DATEDIFF(HOUR,@GIOBD,@GIOKT) < 3)
			BEGIN
				COMMIT TRAN
				PRINT N'TRIG_TIME_CACHIEU THÀNH CÔNG.'
			END
		ELSE
			BEGIN 
				ROLLBACK TRAN
				PRINT N'Thời gian của mỗi ca chiếu phải từ 3 tiếng đổ lại.'
			END
	END

--- TRIGGER KIỂM TRA PHỤ THU PHẢI TRONG KHOẢN 1 VÀ 2
CREATE TRIGGER TRIG_PHUTHU_CACHIEU ON CACHIEU
FOR INSERT, UPDATE
AS
	BEGIN
		DECLARE @PHUTHU FLOAT
		SELECT @PHUTHU = PHUTHUCACHIEU FROM inserted
		IF(@PHUTHU < 1 AND @PHUTHU > 2)
			BEGIN
				
				ROLLBACK TRAN
				PRINT N'PHỤ THU NẰM TRONG KHOẢNG 1 VÀ 2.'
			END
		ELSE
			BEGIN 
				COMMIT TRAN
				PRINT N'TRIG_PHUTHU_CACHIEU THÀNH CÔNG.'
			END
	END
--TEST DL
--SELECT * FROM CACHIEU
INSERT INTO CACHIEU
VALUES('CA013', '10:00:00', '15:00:00', 0, 3)
SELECT DATEDIFF(HOUR,'10:00:00','15:00:00')
--TRIGGER 2: KIỂM TRA NĂM SẢN XUẤT CỦA BẢNG PHIM
GO
CREATE TRIGGER TRIG_CHECKNAMSX_PHIM ON PHIM
FOR INSERT, UPDATE
AS
	BEGIN
		DECLARE @NAMSX INT
		SELECT @NAMSX = NAMSX FROM inserted
		IF(@NAMSX < YEAR(GETDATE()))
			BEGIN
				COMMIT TRAN
				PRINT N'TRIG_CHECKNAMSX_PHIM THÀNH CÔNG.'
			END
		ELSE
			BEGIN 
				ROLLBACK TRAN
				PRINT N'Năm sản xuất phải nhỏ hơn năm hiện tại.'
			END
	END
-- TEST DL
-- SELECT * FROM PHIM
INSERT INTO PHIM(MAPHIM, NAMSX)
VALUES('PHIM013', 2001)
INSERT INTO PHIM(MAPHIM, NAMSX)
VALUES('PHIM012', 2031)
GO

--TRIGGER 3: KIỂM TRA THỜI LUONG CỦA BẢNG PHIM
CREATE TRIGGER TRIG_CHECKTHOILUONG_PHIM ON PHIM
FOR INSERT, UPDATE
AS
	BEGIN
		DECLARE @THOILUONG INT
		SELECT @THOILUONG = THOILUONG FROM inserted
		IF(@THOILUONG >= 50 AND @THOILUONG <= 200) -- Thời lượng phim tối thiểu là 50 phút và tối đa là 200 phút
			BEGIN
				COMMIT TRAN
				PRINT N'TRIG_CHECKTHOILUONG_PHIM THÀNH CÔNG.'
			END
		ELSE
			BEGIN 
				ROLLBACK TRAN
				PRINT N'Thời lượng phim không hợp lệ.'
			END
	END
-- TEST DL
-- SELECT * FROM PHIM
INSERT INTO PHIM(MAPHIM, THOILUONG)
VALUES('PHIM012', 50)
INSERT INTO PHIM(MAPHIM, THOILUONG)
VALUES('PHIM012', 45)
GO

--TRIGGER 4: KIỂM TRA NHÂN VIÊN TRÊN 18 TUỔI
CREATE TRIGGER TRIG_CHECKNGAYSINH_NHANVIEN ON NHANVIEN
FOR INSERT, UPDATE
AS
	BEGIN
		DECLARE @NGAYSINH DATE
		SELECT @NGAYSINH = NGAYSINH FROM inserted
		IF(DATEDIFF(YEAR, @NGAYSINH, GETDATE()) >= 18) -- Tuổi nhân viên phải trên 18 tuổi
			BEGIN
				COMMIT TRAN
				PRINT N'TRIG_CHECKNGAYSINH_NHANVIEN THÀNH CÔNG.'
			END
		ELSE
			BEGIN 
				ROLLBACK TRAN
				PRINT N'Ngày sinh nhân viên chưa đủ 18 tuổi.'
			END
	END
-- TEST DL
-- SELECT * FROM NHANVIEN
INSERT INTO NHANVIEN(MANV, NGAYSINH)
VALUES('NV011', '2000/02/12')
INSERT INTO NHANVIEN(MANV, DIENTHOAI, NGAYSINH)
VALUES('NV012', '099988555', '2005/02/12')
GO

-- TRIGGER 5: KHI THÊM MỘT VÉ SẼ CẬP NHẬT LẠI SỐ LẦN XEM CỦA KHACH HÀNG
CREATE TRIGGER TRIG_UPDATESOLANXEM ON VE
FOR INSERT
AS
	BEGIN
		DECLARE @MAKH NCHAR(20)
		SELECT @MAKH = MAKH FROM inserted
		UPDATE KHACHHANG
		SET SOLANXEM += 1
		WHERE MAKH = @MAKH
	END

-- TEST DL
-- SELECT * FROM VE
-- SELECT * FROM KHACHHANG
SET DATEFORMAT DMY
INSERT INTO VE 
VALUES('VE011','PHIM001', 'KH001','CA003',N'A7',1000000,'NV004','20/5/2022')
--TRIGGER 6: KIỂM TRA GIA VE
GO
CREATE TRIGGER TRIG_CHECKGIA_VE ON VE
FOR INSERT, UPDATE
AS
	BEGIN
		DECLARE @GIA INT
		SELECT @GIA = GIA FROM inserted
		IF(@GIA >= 45000 AND @GIA <= 300000) -- Giá phim tối thiểu là 45000k và tối đa là 300000k
			BEGIN
				COMMIT TRAN
				PRINT N'TRIG_CHECKGIA_VE THÀNH CÔNG.'
			END
		ELSE
			BEGIN 
				ROLLBACK TRAN
				PRINT N'Giá vé phải từ 45000 đến 300000'
			END
	END
-- TEST DL
-- SELECT * FROM VE
INSERT INTO VE
VALUES('VE012', 'PHIM010', 'KH001', 'CA001', 'A3', 100000, 'NV004', '2022-05-13')
INSERT INTO VE
VALUES('VE013', 'PHIM010', 'KH001', 'CA001', 'A3', 10, 'NV004', '2022-05-13')
GO

-------------------------
SELECT * FROM CACHIEU
SELECT * FROM KHACHHANG
SELECT * FROM NHANVIEN
SELECT * FROM PHIM	
SELECT * FROM QUYEN
SELECT * FROM TAIKHOAN
SELECT * FROM VE

---------------FUNCTION-------------------
--FUNCTION 1: TẠO MÃ TỰ ĐỘNG TRÊN BẢNG QUYỀN
GO
CREATE FUNCTION FUNC_MAQUYEN()
RETURNS VARCHAR(10)
AS
	BEGIN
		DECLARE @ID VARCHAR(10)
		SELECT @ID = CONCAT('Q', RIGHT(CONCAT('00',ISNULL(right(max(MAQUYEN),3),0) + 1),3)) FROM QUYEN where MAQUYEN like 'Q%' 
		RETURN @ID
	END
GO
--TEST DL
DECLARE @ID CHAR(10)
SET @ID = dbo.FUNC_MAQUYEN()
PRINT @ID
GO
--FUNCTION 2: TẠO MÃ TỰ ĐỘNG TRÊN BẢNG PHIM
CREATE FUNCTION FUNC_MAPHIM()
RETURNS VARCHAR(10)
AS
BEGIN
	DECLARE @ID VARCHAR(10)
	IF (SELECT COUNT(MAPHIM) FROM PHIM) = 0
		SET @ID = '0'
	ELSE
		SELECT @ID = MAX(RIGHT(MAPHIM, 3)) FROM PHIM
		SELECT @ID = CASE
			WHEN @ID >= 0 AND @ID < 9 THEN 'PHIM00' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
			WHEN @ID >= 9 THEN 'PHIM0' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
		END
	RETURN @ID
END
GO
--TEST DL
DECLARE @ID CHAR(10)
SET @ID = dbo.FUNC_MAPHIM()
PRINT @ID
--FUNCTION 3: TẠO MÃ TỰ ĐỘNG TRÊN BẢNG CACHIEU
GO
CREATE FUNCTION FUNC_MACACHIEU()
RETURNS VARCHAR(10)
AS
	BEGIN
		DECLARE @ID VARCHAR(10)
		SELECT @ID = CONCAT('CA', RIGHT(CONCAT('00',ISNULL(right(max(MACACHIEU),3),0) + 1),3)) FROM CACHIEU where MACACHIEU like 'CA%'
		RETURN @ID
	END
GO
--TEST DL
DECLARE @ID CHAR(10)
SET @ID = dbo.FUNC_MACACHIEU()
PRINT @ID
--FUNCTION 4: TẠO MÃ TỰ ĐỘNG TRÊN BẢNG KHACHHANG
GO
CREATE FUNCTION FUNC_MAKH()
RETURNS VARCHAR(10)
AS
	BEGIN
		DECLARE @ID VARCHAR(10)
		SELECT @ID = CONCAT('KH', RIGHT(CONCAT('00',ISNULL(right(max(MAKH),3),0) + 1),3)) FROM KHACHHANG where MAKH like 'KH%'
		RETURN @ID
	END
GO
--TEST DL
DECLARE @ID CHAR(10)
SET @ID = dbo.FUNC_MAKH()
PRINT @ID
--FUNCTION 5: TẠO MÃ TỰ ĐỘNG TRÊN BẢNG NHANVIEN
GO
CREATE FUNCTION FUNC_MANV()
RETURNS VARCHAR(10)
AS
	BEGIN
		DECLARE @ID VARCHAR(10)
		SELECT @ID = CONCAT('NV', RIGHT(CONCAT('00',ISNULL(right(max(MANV),3),0) + 1),3)) FROM NHANVIEN where MANV like 'NV%'
		RETURN @ID
	END
GO
--TEST DL
DECLARE @ID CHAR(10)
SET @ID = dbo.FUNC_MANV()
PRINT @ID
--FUNCTION 6: TẠO MÃ TỰ ĐỘNG TRÊN BẢNG VE
GO
CREATE FUNCTION FUNC_MAVE()
RETURNS VARCHAR(10)
AS
	BEGIN
		DECLARE @ID VARCHAR(10)
		SELECT @ID = CONCAT('VE', RIGHT(CONCAT('00',ISNULL(right(max(MAVE),3),0) + 1),3)) FROM VE where MAVE like 'VE%'
		RETURN @ID
	END
GO
--TEST DL
DECLARE @ID CHAR(10)
SET @ID = dbo.FUNC_MAVE()
PRINT @ID
GO
------------------------FUNCTION LOAD DATAGRIDVIEW
CREATE FUNCTION FUNC_GETDATAGRIDVIEW(@MAVE VARCHAR(10))
RETURNS TABLE
AS
		RETURN SELECT MAVE , TENPHIM, TENKH, GIOBD, GIOKT, HOTEN
		FROM VE, PHIM, KHACHHANG KH, CACHIEU, NHANVIEN 
		WHERE VE.MAPHIM = PHIM.MAPHIM AND VE.MAKH = KH.MAKH AND VE.MACACHIEU = CACHIEU.MACACHIEU AND VE.MANV = NHANVIEN.MANV AND MAVE = @MAVE
GO
-- TEST DL
SELECT * FROM dbo.FUNC_GETDATAGRIDVIEW('VE001')

--FUNCTION TIM KIEM CA CHIEU
CREATE FUNCTION FUNC_TIMKIEM_CACHIEU (@MACACHIEU VARCHAR(50))
RETURNS TABLE
	RETURN SELECT * FROM CACHIEU WHERE  MACACHIEU = @MACACHIEU 

--TEST DL
SELECT * FROM DBO.FUNC_TIMKIEM_CACHIEU('CA002')
--FUNCION 8 TIM KIEM KHACH HANG
CREATE FUNCTION FUNC_TIMKIEM_KHACHHANG(@MAKH NVARCHAR(50))
RETURNS TABLE
RETURN select * from KHACHHANG where MAKH=@MAKH OR TENKH LIKE '%'+@MAKH+'%' OR DIACHI LIKE '%'+@MAKH+'%' OR SOLANXEM LIKE '%'+@MAKH+'%' OR GIOITINH LIKE '%'+@MAKH+'%'
-- TEST DL
SELECT * FROM dbo.FUNC_TIMKIEM_KHACHHANG(N'1')
----FUNCTION TIM KIẾM PHIM PHIM
CREATE FUNCTION FUNC_TIMKIEM_PHIM(@MAPHIM NVARCHAR(50))
RETURNS TABLE
RETURN select * from PHIM where MAPHIM=@MAPHIM OR TENPHIM LIKE '%'+@MAPHIM+'%' OR THELOAI LIKE '%'+@MAPHIM+'%' OR NAMSX LIKE '%'+@MAPHIM+'%' OR NUOCSX LIKE '%'+@MAPHIM+'%' OR THOILUONG = @MAPHIM
-- TEST DL
SELECT * FROM dbo.FUNC_TIMKIEM_PHIM(N'KINH DỊ')
select *from PHIM
----FUNCTION TIM KIẾM PHIM NHÂN VIÊN
CREATE FUNCTION FUNC_TIMKIEM_NHANVIEN (@MANV NVARCHAR(50))
RETURNS TABLE
RETURN select * from NHANVIEN where MANV = @MANV OR HOTEN LIKE '%'+@MANV+'%' OR GIOITINH LIKE '%'+@MANV+'%' OR DIACHI LIKE '%'+@MANV+'%' 
select *from NHANVIEN
SELECT * FROM dbo.FUNC_TIMKIEM_NHANVIEN(N'SAPA')
---------------------------STORE PROCEDURE---------------
-- PROCEDURE 1: SELECT * QUYEN
GO
CREATE PROCEDURE PRO_GETQUYEN
AS
	BEGIN
		SELECT * FROM QUYEN
	END
-- TEST DL
EXECUTE PRO_GETQUYEN
-- PROCEDURE 2: INSERT INTO QUYEN
GO
CREATE PROCEDURE PRO_INSERTQUYEN @MAQUUYEN VARCHAR(10), @TENQUYEN NVARCHAR(50)
AS
	BEGIN
		INSERT INTO QUYEN(MAQUYEN, TENQUYEN)
		VALUES(@MAQUUYEN, @TENQUYEN)
	END
-- TEST DL
-- SELECT * FROM QUYEN
EXECUTE PRO_INSERTQUYEN 'Q002', 'NHANVIEN'
-- PROCEDURE 3: DELETE FROM QUYEN WHERE
GO
CREATE PROCEDURE PRO_DELETEQUYEN @MAQUUYEN VARCHAR(10)
AS
	BEGIN
		DELETE FROM QUYEN WHERE MAQUYEN = @MAQUUYEN
	END
-- TEST DL
-- SELECT * FROM QUYEN
EXECUTE PRO_DELETEQUYEN 'Q002'
-- PROCEDURE 4: SELECT * TAIKHOAN
GO
CREATE PROCEDURE PRO_GETTAIKHOAN
AS
	BEGIN
		SELECT * FROM TAIKHOAN
	END
-- TEST DL
EXECUTE PRO_GETTAIKHOAN
-- PROCEDURE 5: INSERT INTO TAIKHOAN
GO
CREATE PROCEDURE PRO_INSERTTAIKHOAN @TENTK VARCHAR(50), @MATKHAU NVARCHAR(50), @MAQUYEN VARCHAR(10)
AS
	BEGIN
		INSERT INTO TAIKHOAN(TENDN, MATKHAU, MAQUYEN)
		VALUES(@TENTK, @MATKHAU, @MAQUYEN)
	END
-- TEST DL
-- SELECT * FROM TAIKHOAN
EXECUTE PRO_INSERTTAIKHOAN 'SIN', '123', 'Q002'
-- PROCEDURE 6: DELETE FROM QUYEN WHERE
GO
CREATE PROCEDURE PRO_DELETETAIKHOAN @TENTK VARCHAR(50)
AS
	BEGIN
		DELETE FROM TAIKHOAN WHERE TENDN = @TENTK
	END
-- TEST DL
-- SELECT * FROM TAIKHOAN
EXECUTE PRO_DELETETAIKHOAN 'SIN'
-------------==========================================
-- PROCEDURE : SELECT * VE
GO
CREATE PROCEDURE PRO_GETVE
AS
	BEGIN
		SELECT * FROM VE
	END
-- TEST DL
EXECUTE PRO_GETVE
-- PROCEDURE : INSERT INTO VE
GO
CREATE PROCEDURE PRO_INSERTVE @MAVE VARCHAR(10), @MAPHIM VARCHAR(10), @MAKH VARCHAR(10), @MACACHIEU VARCHAR(10), @SOGHE VARCHAR(10), @GIA INT, @MANV VARCHAR(10), @NGAYCHIEU DATE
AS
	BEGIN
		INSERT INTO VE
		VALUES(@MAVE, @MAPHIM, @MAKH, @MACACHIEU, @SOGHE, @GIA, @MANV, @NGAYCHIEU)
	END
-- TEST DL
-- SELECT * FROM VE
EXECUTE PRO_INSERTVE 'VE011', 'PHIM010', 'KH001', 'CA001', 'A3', 100000, 'NV004', '2022-05-13'

-- PROCEDURE : DELETE FROM VE WHERE
GO
CREATE PROCEDURE PRO_DELETEVE @MAVE VARCHAR(10)
AS
	BEGIN
		DELETE FROM VE WHERE MAVE= @MAVE
	END
-- TEST DL
-- SELECT * FROM VE
EXECUTE PRO_DELETEVE 'VE011'
-- PROCEDURE : UPDATE  VE SET
GO
CREATE PROCEDURE PRO_UPDATEVE @MAVE VARCHAR(10), @MAPHIM VARCHAR(10), @MAKH VARCHAR(10), @MACACHIEU VARCHAR(10), @SOGHE VARCHAR(10), @GIA INT, @MANV VARCHAR(10), @NGAYCHIEU DATE
AS
	BEGIN
		UPDATE VE SET MAPHIM = @MAPHIM, MAKH = @MAKH, MACACHIEU = @MACACHIEU, SOGHE = @SOGHE, GIA = @GIA, MANV = @MANV, NGAYCHIEU = @NGAYCHIEU 
		WHERE MAVE= @MAVE
	END
-- TEST DL
-- SELECT * FROM VE
EXECUTE PRO_UPDATEVE 'VE010', 'PHIM010', 'KH001', 'CA001', 'A3', 100000, 'NV004', '2022-05-13'

--SELECT DATEPART(dw,'2022/8/20') -- TINH THU TRONG TUAN

-- SELECT * FROM VE
EXECUTE PRO_DELETEVE 'VE011'

------------==========================================
---- PROCEDURE : SELECT * CACHIEU
GO
CREATE PROCEDURE PRO_GETCACHIEU
AS
	BEGIN
		SELECT * FROM CACHIEU
	END
-- TEST DL
EXECUTE PRO_GETCACHIEU
-- PROCEDURE : INSERT INTO CACHIEU
GO
CREATE PROCEDURE PRO_INSERTCACHIEU @MACACHIEU VARCHAR(10), @GIOBD TIME, @GIOKT TIME, @CUOITUAN BIT, @PHUTHUCACHIEU DECIMAL(10,2)
AS
	BEGIN
		INSERT INTO CACHIEU
		VALUES(@MACACHIEU, @GIOBD, @GIOKT, @CUOITUAN, @PHUTHUCACHIEU)
	END
-- TEST DL
SELECT * FROM CACHIEU

EXECUTE PRO_INSERTCACHIEU 'CA011', '10:00', '12:00', 1, 1.20


-- PROCEDURE : DELETE FROM CACHIEU WHERE
GO
CREATE PROCEDURE PRO_DELETECACHIEU  @MACACHIEU VARCHAR(10)
AS
	BEGIN
		DELETE FROM CACHIEU WHERE MACACHIEU= @MACACHIEU
	END
-- TEST DL
 SELECT * FROM CACHIEU
EXECUTE PRO_DELETECACHIEU 'CA011'
-- PROCEDURE : UPDATE  CACHIEU SET
GO
CREATE PROCEDURE PRO_UPDATECACHIEU @MACACHIEU VARCHAR(10), @GIOBD TIME, @GIOKT TIME, @CUOITUAN BIT, @PHUTHUCACHIEU DECIMAL(10,2)
AS
	BEGIN
		UPDATE CACHIEU SET GIOBD = @GIOBD, GIOKT = @GIOKT, CUOITUAN = @CUOITUAN, PHUTHUCACHIEU=@PHUTHUCACHIEU 
		WHERE MACACHIEU= @MACACHIEU
	END
--=========================================
-- PROCUDURE SELECT * FROM KHACH HANG
GO
CREATE PROCEDURE PRO_SELECTKHACHHANG
AS
	BEGIN
	SELECT * FROM KHACHHANG
	END
--TEST 
EXECUTE PRO_SELECTKHACHHANG
GO

---------------------------------PROCEDURE PRO_INSERTKHACHHANG
CREATE PROCEDURE PRO_INSERTKHACHHANG(@MAKH nvarchar(10), @TENKH nvarchar(50), @NGAYSINH date, @GIOITINH nvarchar(4), @CMND nchar(15),
									@DIENTHOAI nchar(10),@DIACHI nvarchar(30), @SOLANXEM int)
AS
	
	BEGIN
		INSERT INTO KHACHHANG(MAKH, TENKH, NGAYSINH, GIOITINH, CMND, DIENTHOAI, DIACHI, SOLANXEM)
		VALUES(@MAKH, @TENKH, @NGAYSINH, @GIOITINH, @CMND, @DIENTHOAI, @DIACHI, @SOLANXEM)
	END
--TEST 
-- SELECT * FROM KHACHHANG
EXECUTE PRO_INSERTKHACHHANG 'KH011',N'Lê a','2000/02/03',N'Nam','3956785420','0334906511',N'TP.HCM',5
GO

-----------------------------PROCEDURE PRO_DELETEKHACHHANG
CREATE PROCEDURE PRO_DELETEKHACHHANG (@MAKH nvarchar(10))
AS
	
	BEGIN
		DELETE FROM KHACHHANG WHERE MAKH = @MAKH
	END
EXECUTE PRO_DELETEKHACHHANG'KH011'


-----------------------------PROCEDURE PRO_UPDATEKHACHHANG
GO
CREATE PROCEDURE PRO_UPDATEKHACHHANG @MAKH nvarchar(10), @TENKH nvarchar(50), @NGAYSINH date, @GIOITINH nvarchar(4), @CMND nchar(15),@DIENTHOAI nchar(10),@DIACHI nvarchar(30), @SOLANXEM int
AS
	BEGIN
		UPDATE KHACHHANG SET TENKH= @TENKH,NGAYSINH = @NGAYSINH,GIOITINH= @GIOITINH,CMND= @CMND,DIENTHOAI= @DIENTHOAI,DIACHI= @DIACHI,SOLANXEM= @SOLANXEM
		WHERE MAKH= @MAKH
	END
-- TEST DL
-- SELECT * FROM KHACHHANG
EXECUTE PRO_UPDATEKHACHHANG 'KH010',N'Nguyễn Tú Trinh','2001/03/01',N'Nam','3001190484','0932778821',N'TP.HCM',5

SELECT * FROM VE WHERE MAKH = 'KH010'



-- TƯƠNG TỰ VỚI NHỮNG BẢNG KHÁC THÌ CŨNG TẠM CÁC PROCEDURE KHI SELECT, INSERT, DELETE CÁC ÔNG MỖI NGƯỜI BỔ SUNG VÀO CHO MỘT BẢNG
-- CÒN PHẦN CURSOR MỖI ÔNG THÊM VÀO MỘT CÁI VỀ BÀI NÀY(VD: in nhứng phim được xem trong tháng gần nhất, Cursor tính tổng tiền của từng khách hàng đã dùng...)







---- PROCEDURE : SELECT * NHANVIEN
GO
CREATE PROCEDURE PRO_GETNHANVIEN
AS
	BEGIN
		SELECT * FROM NHANVIEN
	END
-- TEST DL
EXECUTE PRO_GETNHANVIEN
-- PROCEDURE : INSERT INTO NHANVIEN
GO
CREATE PROCEDURE PRO_INSERTNHANVIEN @MANV VARCHAR(10), @HOTEN VARCHAR(50), @GIOITINH CHAR(5), @DIENTHOAI CHAR(15), @NGAYSINH DATE, @DIACHI VARCHAR(30)
AS
	BEGIN
		INSERT INTO NHANVIEN
		VALUES(@MANV, @HOTEN, @GIOITINH, @DIENTHOAI, @NGAYSINH, @DIACHI)
	END
-- TEST DL
-- SELECT * FROM NHANVIEN

EXECUTE PRO_INSERTNHANVIEN 'NV011', N'TRẦN THANH TÙNG', 'NAM', '0989317766', '2001/03/02', 'DONG THAP'


-- PROCEDURE : DELETE FROM NHANVIEN WHERE
GO
CREATE PROCEDURE PRO_DELETENHANVIEN  @MANV VARCHAR(10)
AS
	BEGIN
		DELETE FROM NHANVIEN WHERE MANV= @MANV
	END
-- TEST DL
 SELECT * FROM NHANVIEN
EXECUTE PRO_DELETENHANVIEN 'NV011'
-- PROCEDURE : UPDATE  NHANVIEN SET
GO
CREATE PROCEDURE PRO_UPDATENHANVIEN @MANV VARCHAR(10), @HOTEN VARCHAR(50), @GIOITINH CHAR(5), @DIENTHOAI CHAR(15), @NGAYSINH DATE, @DIACHI VARCHAR(30)
AS
	BEGIN
		UPDATE NHANVIEN SET HOTEN = @HOTEN, GIOITINH = @GIOITINH, DIENTHOAI = @DIENTHOAI, NGAYSINH = @NGAYSINH, DIACHI = @DIACHI 
		WHERE MANV= @MANV
	END
-- TEST DL
 SELECT * FROM NHANVIEN
EXECUTE PRO_UPDATENHANVIEN 'NV010', N'TRẦN THANH TÙNG', 'NAM', '0989317766', '2001/03/02', 'DONG THAP'

---- PROCEDURE : SELECT * FROM PHIM
GO
CREATE PROCEDURE PRO_GETPHIM
AS
	BEGIN
		SELECT * FROM PHIM
	END
-- TEST DL
EXECUTE PRO_GETPHIM
-- PROCEDURE : INSERT INTO PHIM
GO
CREATE PROCEDURE PRO_INSERTPHIM @MAPHIM VARCHAR(10), @TENPHIM VARCHAR(100), @DAODIEN VARCHAR(50),@NOIDUNG VARCHAR(100),@THELOAI VARCHAR(50), @NUOCSX VARCHAR(50), @NAMSX INT, @THOILUONG INT
AS
	BEGIN
		INSERT INTO PHIM
		VALUES(@MAPHIM, @TENPHIM , @DAODIEN ,@NOIDUNG,@THELOAI, @NUOCSX, @NAMSX , @THOILUONG )
	END
-- TEST DL
-- SELECT * FROM NHANVIEN

EXECUTE PRO_INSERTPHIM 'PHIM011','SDFS','FDS','FDDSF','SFDDSF','SFDS',2000, 120


-- PROCEDURE : DELETE FROM NHANVIEN WHERE
GO
CREATE PROCEDURE PRO_DELETEPHIM @MAPHIM VARCHAR(10)
AS
	BEGIN
		DELETE FROM PHIM WHERE MAPHIM= @MAPHIM
	END
-- TEST DL
 SELECT * FROM PHIM
EXECUTE PRO_DELETEPHIM 'PHIM011'
-- PROCEDURE : UPDATE  NHANVIEN SET
GO
CREATE PROCEDURE PRO_UPDATEPHIM @MAPHIM VARCHAR(10), @TENPHIM VARCHAR(100), @DAODIEN VARCHAR(50),@NOIDUNG VARCHAR(100),@THELOAI VARCHAR(50), @NUOCSX VARCHAR(50), @NAMSX INT, @THOILUONG INT
AS
	BEGIN
		UPDATE PHIM SET  TENPHIM = @TENPHIM, DAODIEN = @DAODIEN, NOIDUNG = @NOIDUNG, THELOAI = @THELOAI, NUOCSX =@NUOCSX, NAMSX=@NAMSX, THOILUONG =@THOILUONG 
		WHERE MAPHIM =@MAPHIM
	END
-- TEST DL
 SELECT * FROM PHIM
EXECUTE PRO_UPDATEPHIM 'PHIM010','ADFA', 'AFDA', 'AFDA', 'AFDA', 'AFDA', 2011, 120

---- PROCEDURE : SELECT * NHANVIEN


SELECT * FROM VE WHERE MAPHIM = 'PHIM001'

----======================================== CURSOR ================================================================
--1/ Viết cursor hiển thị mave và giave  tương ứng.
-- Bước 1: Khai báo cursor
DECLARE CUR_VE CURSOR
DYNAMIC
FOR SELECT MAVE, GIA
	FROM VE
	
-- Bước 2: Mở cursor
OPEN CUR_VE
-- Bước 3: Đọc và xử lý dl
DECLARE @MAVE VARCHAR(10), @GIA INT
FETCH NEXT FROM CUR_VE INTO @MAVE, @GIA
WHILE(@@FETCH_STATUS = 0)
BEGIN
	PRINT CAST(@MAVE AS VARCHAR(5)) + ' ' +  CAST(@GIA AS CHAR)
	FETCH NEXT FROM CUR_VE INTO @MAVE, @GIA
END
-- Bước 4: Đóng cursor
CLOSE CUR_VE
-- Bước 5: Hủy cursor
DEALLOCATE CUR_VE
--2/ Viết cursor hiển thị các vé có giá vé nhỏ 100.000
-- Bước 1: Khai báo cursor
DECLARE CUR_VE_2 CURSOR
DYNAMIC
FOR SELECT MAVE, SOGHE, NGAYCHIEU, GIA
	FROM VE
	WHERE GIA < 100000
	
-- Bước 2: Mở cursor
OPEN CUR_VE_2
-- Bước 3: Đọc và xử lý dl
DECLARE @MAVE VARCHAR(10), @SOGHE VARCHAR(10), @NGAYCHIEU DATE, @GIA INT
FETCH NEXT FROM CUR_VE_2 INTO @MAVE, @SOGHE, @NGAYCHIEU, @GIA
WHILE(@@FETCH_STATUS = 0)
BEGIN
	PRINT CAST(@MAVE AS VARCHAR(5)) + ' '+CAST(@SOGHE AS VARCHAR(5))+ ' '+ CAST(@NGAYCHIEU AS VARCHAR(10))+ ' ' +  CAST(@GIA AS CHAR)
	FETCH NEXT FROM CUR_VE_2 INTO @MAVE, @SOGHE, @NGAYCHIEU, @GIA
END
-- Bước 4: Đóng cursor
CLOSE CUR_VE_2
-- Bước 5: Hủy cursor
DEALLOCATE CUR_VE_2
GO
--3/ Viết cursor hiển thị maphim và tenphim  tương ứng.
-- Bước 1: Khai báo cursor
DECLARE CUR_PHIM CURSOR
DYNAMIC
FOR SELECT MAPHIM, TENPHIM
	FROM PHIM
	
-- Bước 2: Mở cursor
OPEN CUR_PHIM
-- Bước 3: Đọc và xử lý dl
DECLARE @MAPHIM VARCHAR(10), @TENPHIM NVARCHAR(50)
FETCH NEXT FROM CUR_PHIM INTO @MAPHIM, @TENPHIM
WHILE(@@FETCH_STATUS = 0)
BEGIN
	PRINT CAST(@MAPHIM AS VARCHAR(5)) + ' ' +  CAST(@TENPHIM AS NVARCHAR)
	FETCH NEXT FROM CUR_PHIM INTO @MAPHIM, @TENPHIM
END
-- Bước 4: Đóng cursor
CLOSE CUR_PHIM
-- Bước 5: Hủy cursor
DEALLOCATE CUR_PHIM
-- Bước 4: Đóng cursor
CLOSE CUR_PHIM
-- Bước 5: Hủy cursor
DEALLOCATE CUR_PHIM
--4/ Viết cursor hiển thị những phim có thời lượng lớn hơn 90
-- Bước 1: Khai báo cursor
DECLARE CUR_PHIM_2 CURSOR
DYNAMIC
FOR SELECT MAPHIM, TENPHIM, THOILUONG
	FROM PHIM
	WHERE THOILUONG > 90
	
-- Bước 2: Mở cursor
OPEN CUR_PHIM_2
-- Bước 3: Đọc và xử lý dl
DECLARE @MAPHIM VARCHAR(10), @TENPHIM NVARCHAR(10), @THOILUONG INT
FETCH NEXT FROM CUR_PHIM_2 INTO @MAPHIM, @TENPHIM, @THOILUONG
WHILE(@@FETCH_STATUS = 0)
BEGIN
	PRINT CAST(@MAPHIM AS VARCHAR(10)) + ' ' +  CAST(@THOILUONG AS CHAR)
	FETCH NEXT FROM CUR_PHIM_2 INTO @MAPHIM,@TENPHIM,@THOILUONG
END
-- Bước 4: Đóng cursor
CLOSE CUR_PHIM_2
-- Bước 5: Hủy cursor
DEALLOCATE CUR_PHIM_2
GO
--5/ Viết cursor hiển thị makhachhang và tenkhachhang  tương ứng.
-- Bước 1: Khai báo cursor
DECLARE CUR_KHACHHANG CURSOR
DYNAMIC
FOR SELECT MAKH, TENKH
	FROM KHACHHANG
	
-- Bước 2: Mở cursor
OPEN CUR_KHACHHANG
-- Bước 3: Đọc và xử lý dl
DECLARE @MAKH VARCHAR(10), @TENKH NVARCHAR(50)
FETCH NEXT FROM CUR_KHACHHANG INTO @MAKH, @TENKH
WHILE(@@FETCH_STATUS = 0)
BEGIN
	PRINT CAST(@MAKH AS VARCHAR(5)) + ' ' +  CAST(@TENKH AS NVARCHAR)
	FETCH NEXT FROM CUR_KHACHHANG INTO @MAKH, @TENKH
END
-- Bước 4: Đóng cursor
CLOSE CUR_KHACHHANG
-- Bước 5: Hủy cursor
DEALLOCATE CUR_KHACHHANG
--6/ Viết cursor hiển thị khách hàng có số lần xem lớn hơn 2
-- Bước 1: Khai báo cursor
DECLARE CUR_KHACHHANG_2 CURSOR
DYNAMIC
FOR SELECT MAKH, TENKH,SOLANXEM
	FROM KHACHHANG
	WHERE SOLANXEM > 2
	
-- Bước 2: Mở cursor
OPEN CUR_KHACHHANG_2
-- Bước 3: Đọc và xử lý dl
DECLARE @MAKH VARCHAR(10), @TENKH NVARCHAR(50), @SOLANXEM INT
FETCH NEXT FROM CUR_KHACHHANG_2 INTO @MAKH, @TENKH, @SOLANXEM
WHILE(@@FETCH_STATUS = 0)
BEGIN
	PRINT CAST(@MAKH AS VARCHAR(5)) + ' ' +  CAST(@SOLANXEM AS CHAR)
	FETCH NEXT FROM CUR_KHACHHANG_2 INTO @MAKH,@TENKH, @SOLANXEM
END
-- Bước 4: Đóng cursor
CLOSE CUR_KHACHHANG_2
-- Bước 5: Hủy cursor
DEALLOCATE CUR_KHACHHANG_2
GO

-----------------------------------------
--7/ Viết cursor hiển thị macachieu và cuoituan  tương ứng.
-- Bước 1: Khai báo cursor
DECLARE CUR_CACHIEU CURSOR
DYNAMIC
FOR SELECT MACACHIEU, CUOITUAN
	FROM CACHIEU
	
-- Bước 2: Mở cursor
OPEN CUR_CACHIEU
-- Bước 3: Đọc và xử lý dl
DECLARE @MACACHIEU VARCHAR(10), @CUOITUAN BIT
FETCH NEXT FROM CUR_CACHIEU INTO @MACACHIEU, @CUOITUAN
WHILE(@@FETCH_STATUS = 0)
BEGIN
	PRINT CAST(@MACACHIEU AS VARCHAR(5)) + ' ' +  CAST(@CUOITUAN AS VARCHAR)
	FETCH NEXT FROM CUR_CACHIEU INTO @MACACHIEU, @CUOITUAN
END
-- Bước 4: Đóng cursor
CLOSE CUR_CACHIEU
-- Bước 5: Hủy cursor
DEALLOCATE CUR_CACHIEU
--8/ Viết cursor hiển thị các vé có giá vé nhỏ 100.000
-- Bước 1: Khai báo cursor
DECLARE CUR_CACHIEU_2 CURSOR
DYNAMIC
FOR SELECT MACACHIEU,PHUTHUCACHIEU
	FROM CACHIEU
	WHERE PHUTHUCACHIEU > 1
	
-- Bước 2: Mở cursor
OPEN CUR_CACHIEU_2
-- Bước 3: Đọc và xử lý dl
DECLARE @MACACHIEU VARCHAR(10),@PHUTHUCACHIEU DECIMAL(10,2)
FETCH NEXT FROM CUR_CACHIEU_2 INTO @MACACHIEU,@PHUTHUCACHIEU
WHILE(@@FETCH_STATUS = 0)
BEGIN
	PRINT CAST(@MACACHIEU AS VARCHAR(5)) + ' ' +  CAST(@PHUTHUCACHIEU AS CHAR)
	FETCH NEXT FROM CUR_CACHIEU_2 INTO @MACACHIEU,@PHUTHUCACHIEU
END
-- Bước 4: Đóng cursor
CLOSE CUR_CACHIEU_2
-- Bước 5: Hủy cursor
DEALLOCATE CUR_CACHIEU_2
GO
--=====================================
----BACKUP FULL MODEL-----------------------------------------
BACKUP DATABASE DB_RAPCHIEUPHIM
TO DISK = 'D:\TungTran\Tng_Forder\Study\HQTCSDL\Backup\FULL.BAK'
SET DATEFORMAT DMY
INSERT INTO VE 
VALUES('VE001','PHIM021', 'KH001','CA003',N'A7',100000,'NV001','20/5/2022')
INSERT INTO VE 
VALUES('VE002','PHIM022', 'KH001','CA001',N'F7',100000,'NV002','23/5/2022')
-- SELECT * FROM VE
-- DIFFERENTIAL----------------------------------
BACKUP DATABASE DB_RAPCHIEUPHIM
TO DISK = 'D:\TungTran\Tng_Forder\Study\HQTCSDL\Backup\DIFF1.BAK'
WITH DIFFERENTIAL

SET DATEFORMAT DMY
INSERT INTO VE 
VALUES('VE001','PHIM023', 'KH001','CA003',N'A7',100000,'NV001','20/5/2022')
INSERT INTO VE 
VALUES('VE002','PHIM024', 'KH001','CA001',N'F7',100000,'NV002','23/5/2022')
-- LOG------------------------------
BACKUP LOG DB_RAPCHIEUPHIM
TO DISK = 'D:\TungTran\Tng_Forder\Study\HQTCSDL\Backup\LOG1.TRN'


-- RESTORE LẠI DATABASE FULL MODEL
-- Đầu tiên phải backup lại file tail log
-- BACKUP TAIL LOG
BACKUP LOG DB_RAPCHIEUPHIM
TO DISK = 'D:\TungTran\Tng_Forder\Study\HQTCSDL\Backup\TAIL1.TRN'
WITH NO_TRUNCATE,NORECOVERY
-- RESTORE FULL.BAK
RESTORE DATABASE DB_RAPCHIEUPHIM
FROM DISK = 'D:\TungTran\Tng_Forder\Study\HQTCSDL\Backup\FULL.BAK'
WITH NORECOVERY
GO
-- RESTORE DIFF1.BAK
RESTORE DATABASE DB_RAPCHIEUPHIM
FROM DISK = 'D:\TungTran\Tng_Forder\Study\HQTCSDL\Backup\DIFF1.BAK'
WITH NORECOVERY
-- LOG
RESTORE DATABASE DB_RAPCHIEUPHIM
FROM DISK = 'D:\TungTran\Tng_Forder\Study\HQTCSDL\Backup\LOG1.TRN'
WITH NORECOVERY
-- TAIL LOG
RESTORE DATABASE DB_RAPCHIEUPHIM
FROM DISK = 'D:\TungTran\Tng_Forder\Study\HQTCSDL\Backup\TAIL1.TRN'
WITH RECOVERY

----------------------pHAN QUYỀN NGƯỜI DÙNG
GO
-- ADD LOGIN
--LOGIN ADMIN
SP_ADDLOGIN 'tung', '123'
-- LOGIN USER
go
SP_ADDLOGIN 'loc', '123'
GO
SP_ADDLOGIN 'duy', '123'
GO
SP_ADDLOGIN 'leduy', '123'
GO
SP_ADDLOGIN 'long', '123'

---ADD USER
go
SP_ADDUSER 'tung', 'tung'
--------------
go
SP_ADDUSER 'loc', 'loc'
go
SP_ADDUSER 'duy', 'duy'
go
SP_ADDUSER 'leduy', 'leduy'
go
SP_ADDUSER 'long', 'long'

-----SP_ADDROLE 'TÊN NHÓM QUYỂN'
SP_ADDROLE 'ADMIN'
GO
SP_ADDROLE 'NHANVIEN'
-- SP_ADDROLEMEMBER 'TÊN NHÓM QUYỀN', ' TÊN NGƯỜI DÙNG'
--ADMIN
SP_ADDROLEMEMBER 'QUANTRI', 'tung'
--NHANVIEN
SP_ADDROLEMEMBER 'NHANVIEN', 'loc'
go
SP_ADDROLEMEMBER 'NHANVIEN', 'duy'
go
SP_ADDROLEMEMBER 'NHANVIEN', 'leduy'
go
SP_ADDROLEMEMBER 'NHANVIEN', 'long'

--Phân quyền cho nhóm quyền QUANTRI GRANT ALL TRÊN TẤT CẢ CÁC BẢNG
----CACHIEU
GRANT ALL
ON CACHIEU
TO QUANTRI
GO
----KHACHHANG
GRANT ALL
ON KHACHHANG
TO QUANTRI
--NHANVIEN
GRANT ALL
ON NHANVIEN
TO QUANTRI
--PHIM
GRANT ALL
ON PHIM
TO QUANTRI
--QUYEN
GRANT ALL
ON QUYEN
TO QUANTRI
--TAIKHOAN
GRANT ALL
ON TAIKHOAN
TO QUANTRI
--VE
GRANT ALL
ON VE
TO QUANTRI

--Phân quyền cho nhóm quyền NHANVIEN GRANT ALL TRÊN BẢNG VE, SELECT TRÊN CÁC BẢNG CÒN LẠI VỚI MỤC THỐNG KÊ
--VE
GRANT ALL
ON VE
TO NHANVIEN
----CACHIEU
GRANT SELECT
ON CACHIEU
TO NHANVIEN
----KHACHHANG
GRANT SELECT
ON KHACHHANG
TO NHANVIEN
--NHANVIEN
GRANT SELECT
ON NHANVIEN
TO NHANVIEN
--PHIM
GRANT SELECT
ON PHIM
TO NHANVIEN
--QUYEN
GRANT SELECT
ON QUYEN
TO NHANVIEN
--TAIKHOAN
GRANT ALL --SAI XÓT CẤP TOÀN QUYỀN CHO NHÓM NHÂN VIÊN 
ON TAIKHOAN
TO NHANVIEN

-- CHẶN QUYỀN INSERT, DELETE, UPDATE TRONG BẢNG TK CHO NHANVIEN
DENY INSERT, DELETE, UPDATE
ON TAIKHOAN
TO NHANVIEN

--- THU HỒI QUYỀN 
REVOKE SELETECT -- VÌ THU THÔNG BẢO MẬT NÊN THU HỒI QUYỀN SELECT TRONG BẢNG KH CỦA NHÓM NHANVIEN
ON KHACHHANG
TO NHANVIEN